############### SOF language system message strings: English
### Error types
sof.error.type.generic=Interpreter
sof.error.type.syntax=Syntax
sof.error.type.call=Call
sof.error.type.type=Type
sof.error.type.stackaccess=StackAccess
sof.error.type.arithmetic=Arithmetic
sof.error.type.name=Name
### Error messages
sof.error.message.generic=Unknown error. This may be a problem, consider filing a bug report.
sof.error.message.syntax=Syntax error, unexpected character(s).
sof.error.message.call=Error while calling.
sof.error.message.type=Incorrect types.
sof.error.message.stackaccess=Illegal access to protected stack elements.
sof.error.message.stack=Stack is empty.
sof.error.message.arithmetic=Mathematically invalid operation.
sof.error.message.dupnametable=A nametable cannot be duplicated.
## all syntax errors: format token (s)
sof.error.message.syntax.boolean=Invalid Boolean literal "%s".
sof.error.message.syntax.float=Invalid Float literal "%s".
sof.error.message.syntax.integer=Invalid Integer literal "%s".
sof.error.message.syntax.identifier="%s" is not a valid identifier.
sof.error.message.syntax.string="%s" is not a valid String literal.
sof.error.message.syntax.string.unclosed=Unclosed String literal.
# format digit (c), base (d)
sof.error.message.syntax.integer.base=Character "%c" not allowed in base %d integer literal.
sof.error.message.syntax.codeblock=Unclosed code block.
# format first return value (#s)
sof.error.message.doublecall.first-non-callable=Cannot complete double-call operator ":" : First call returned non-Callable `%#s´.
sof.error.message.doublecall.first-null=Cannot complete double-call operator ":" : First call didn''t return anything.
sof.error.message.div-by-zero=Divide by zero.
# format value (#s), type (s)
sof.error.message.type.checkfail=`%#s´ is not a %s.
## all type errors: format first type (s), second type (s)
sof.error.message.type.equals-incompatible=Types %s and %s cannot be checked for equality.
sof.error.message.type.divide=Cannot divide types %s and %s.
sof.error.message.type.add=Cannot add types %s and %s.
sof.error.message.type.multiply=Cannot multiply types %s and %s.
sof.error.message.type.subtract=Cannot subtract types %s and %s.
sof.error.message.type.and=Cannot logically and types %s and %s.
sof.error.message.type.or=Cannot logically or types %s and %s.
sof.error.message.type.xor=Cannot logically exclusive or types %s and %s.
sof.error.message.type.not=Cannot logically negate type %s.
sof.error.message.type.compare=%s and %s cannot be compared.
# format identifier (#s)
sof.error.message.name=Identifier `%#s´ is not defined.
### Interpreter messages
# use the unicode escape for space to circumvent whitespace deletion
sof.cli.help=\
     sof - Interpreter for Stack with Objects and       %n\
\u0020     Functions (SOF) Programming Language.        %n\
     usage: sof [-hvdpP] [-c COMMAND]                   %n\
\u0020          FILENAME [...FILENAMES]                 %n%n\
     positional arguments:                              %n\
\u0020  filename  Path to a file to be read and         %n\
\u0020            executed. Can be a list of files that %n\
\u0020            are executed in order.                %n%n\
     options:                                           %n\
\u0020  --help, -h                                      %n\
\u0020            Display this help message and exit.   %n%n\
\u0020            Display version information and exit. %n\
\u0020  -d        Execute in debug mode. Read the manual%n\
\u0020            for more information.                 %n\
\u0020  -p        Run the preprocessor and exit.        %n\
\u0020  -P        Do not run the preprocessor before    %n\
\u0020            executing the input file(s).          %n\
\u0020  --command, -c COMMAND                           %n\
\u0020            Execute COMMAND and exit.             %n%n\
     When used without execution-starting arguments (-c %n\
     or filename), sof is started in interactive mode.  %n%n\
     Quit the program with ^C.                          %n%n
sof.cli.version=sof version %s (built %s)
sof.cli.license=This program is licensed under GNU General Public License 3.0.%nSee the project LICENSE for details.%n
sof.cli.filenotfound=error: file %s not found, check access restrictions.%n
sof.debug.stack=Stack: 
sof.debug.gnt=Global Nametable: 
### Miscellaneous
sof.error.type.assert=assert
sof.error.message.assert=Assertion check value was false, failing test.
sof.misc.stopiteration=Iteration failed because a compiler exception was encountered.
